Freistehender Code

    pi_ager_debug
        debugging = 'off'      # Debugmodus 'on' # kann raus. muss über DB DEBUG geprüft werden wird nur in ageingtable noch verwendet
        
    pi_ager_paths
        Zeile 46 set_paths()
        
    pi_ager_names
        alle variablen
        
    pi_ager_init
        pi_ager_paths.set_paths()

        logspacer = "***********************************************"
        logspacer2 = '-------------------------------------------------------'
        delay = 4                      # Wartezeit in der Schleife
        counter_humidify = 0           # Zaehler fuer die Verzoegerung der Befeuchtung
        status_exhaust_fan = False     # Variable fuer die "Evakuierung" zur Feuchtereduzierung durch (Abluft-)Luftaustausch
        verbose = True                 # Dokumentiert interne Vorgaenge wortreich
        # Allgemeingueltige Werte aus config.json
        sensortype = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.sensortype_key)                                        # Sensortyp
        language = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.language_key)                                            # Sprache der Textausgabe
        switch_on_cooling_compressor = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.switch_on_cooling_compressor_key)    # Einschalttemperatur
        switch_off_cooling_compressor = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.switch_off_cooling_compressor_key)  # Ausschalttemperatur
        switch_on_humidifier = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.switch_on_humidifier_key)                    # Einschaltfeuchte
        switch_off_humidifier = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.switch_off_humidifier_key)                  # Ausschaltfeuchte
        delay_humidify = pi_ager_database.get_table_value(pi_ager_names.config_settings_table, pi_ager_names.delay_humidify_key)                                # Luftbefeuchtungsverzoegerung
        # Sainsmart Relais Vereinfachung 0 aktiv
        relay_on = False               # negative Logik!!! des Relay's, Schaltet bei 0 | GPIO.LOW  | False  ein
        relay_off = (not relay_on)     # negative Logik!!! des Relay's, Schaltet bei 1 | GPIO.High | True aus
        # RRD-Tool
        rrd_dbname = 'pi-ager'                   # Name fuer Grafiken etc
        rrd_filename = rrd_dbname + '.rrd'   # Dateinamen mit Endung
        measurement_time_interval = 10       # Zeitintervall fuer die Messung in Sekunden
        # i = 0
        loopcounter = 0                      #  Zaehlt die Durchlaeufe des Mainloops
        # Pinbelegung
        board_mode = gpio.BCM              # GPIO board mode (BCM = Broadcom SOC channel number - numbers after GPIO Bsp. GPIO12=12 [GPIO.BOARD = Pin by number Bsp: GPIO12=32])
        gpio_cooling_compressor = 4        # GPIO fuer Kuehlschrankkompressor
        gpio_heater = 3                    # GPIO fuer Heizkabel
        gpio_humidifier = 18               # GPIO fuer Luftbefeuchter
        gpio_circulating_air = 24          # GPIO fuer Umluftventilator
        gpio_exhausting_air = 23           # GPIO fuer Austauschluefter
        gpio_uv = 25                       # GPIO fuer UV Licht
        gpio_light = 8                     # GPIO fuer Licht
        gpio_dehumidifier = 7              # GPIO fuer Entfeuchter
        gpio_sensor_data = 17              # GPIO fuer Data Temperatur/Humidity Sensor
        gpio_sensor_sync = 27              # GPIO fuer Sync Temperatur/Humidity Sensor
        gpio_scale_data = 10               # GPIO fuer Waage Data
        gpio_scale_sync = 9                # GPIO fuer Waage Sync
        gpio_recerved1 = 2                 # GPIO Reserve 1
        gpio_recerved2 = 11                # GPIO Reserve 2
        # Sprache
        set_language()